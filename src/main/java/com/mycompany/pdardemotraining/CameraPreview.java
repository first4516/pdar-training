/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.pdardemotraining;

import java.awt.Color;
import java.awt.Container;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import javax.swing.ImageIcon;

import com.github.sarxos.webcam.Webcam;
import com.mycompany.pdardemotraining.ScreenUtil;

/**
 *
 * @author user
 */
public class CameraPreview extends javax.swing.JFrame {

    /**
     * Creates new form PersonDataPreview
     */
    //Check null
    public String checkEmpty(String text) {
        if(text.equals("")) {
            return "-";
        }else {
            return text;
        }
    }
    
    Webcam webcam;
    Boolean running = false;
    boolean ONLINE;
    BufferedImage image = null;
    byte[] imageInByte;
    public static String photo_person = "", pageform;
    public static ImageIcon imageIcon;
    public static ArrayList<BufferedImage> imagesList = new ArrayList<>();
    public static ArrayList<BufferedImage> imagesPaperList = new ArrayList<>();
    public String fullName = "";
    
    public CameraPreview(Webcam person) {
//        System.out.println("CCC : "+person.toString());
        initComponents();
        setAlwaysOnTop(true);
        ScreenUtil.showOnScreen(ScreenUtil.getSecondaryScreen(), this, "custom", 800, 600);
        javax.swing.plaf.InternalFrameUI ifu= jInternalFrameWebcam.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)ifu).setNorthPane(null);
        Container c = jInternalFrameWebcam.getContentPane();
        c.setBackground(Color.lightGray);
            
        webcam = person;
        running = true;
        new videoTaker().start();
        
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                
//                webcam.close();
//            FunctionMain.Logout();
//                log.info("MissingDocDailyForm close");
//                System.exit(0);
//        }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrameWebcam = new javax.swing.JInternalFrame();
        jPanelWebcam = new javax.swing.JPanel();
        jLabelWebcam = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(java.awt.Color.black);
        setUndecorated(true);

        jInternalFrameWebcam.setBorder(null);
        jInternalFrameWebcam.setVisible(true);

        jPanelWebcam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanelWebcam.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelWebcam.setName(""); // NOI18N
        jPanelWebcam.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelWebcam.setRequestFocusEnabled(false);

        jLabelWebcam.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        javax.swing.GroupLayout jPanelWebcamLayout = new javax.swing.GroupLayout(jPanelWebcam);
        jPanelWebcam.setLayout(jPanelWebcamLayout);
        jPanelWebcamLayout.setHorizontalGroup(
            jPanelWebcamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWebcamLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jLabelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(234, 234, 234))
        );
        jPanelWebcamLayout.setVerticalGroup(
            jPanelWebcamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWebcamLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jLabelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jInternalFrameWebcamLayout = new javax.swing.GroupLayout(jInternalFrameWebcam.getContentPane());
        jInternalFrameWebcam.getContentPane().setLayout(jInternalFrameWebcamLayout);
        jInternalFrameWebcamLayout.setHorizontalGroup(
            jInternalFrameWebcamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 824, Short.MAX_VALUE)
            .addGroup(jInternalFrameWebcamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrameWebcamLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jInternalFrameWebcamLayout.setVerticalGroup(
            jInternalFrameWebcamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(jInternalFrameWebcamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrameWebcamLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 178, Short.MAX_VALUE)
                .addComponent(jInternalFrameWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(jInternalFrameWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CameraPreview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CameraPreview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CameraPreview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CameraPreview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new PersonDataPreview().setVisible(true);
            }
        });
    }

    class videoTaker extends Thread {

        @Override
        public void run() {

            while (true && running) {
                try {
//                    webcam.setViewSize(new Dimension(640, 480));
                    image = webcam.getImage();
//                    jLabelWebcam.setIcon(new ImageIcon(image));
//                    BufferedImage newiImage = new BufferedImage(640, 480, BufferedImage.SCALE_SMOOTH);
                    jLabelWebcam.setIcon(new ImageIcon(image));
                    Thread.sleep(60);
                } catch (InterruptedException e) {
//                    webcam.close();
                    running = false;
                    System.out.println("SAs" + e);
                }
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame jInternalFrameWebcam;
    private javax.swing.JLabel jLabelWebcam;
    private javax.swing.JPanel jPanelWebcam;
    // End of variables declaration//GEN-END:variables
}
